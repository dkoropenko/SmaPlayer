/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smaplayer.gui;

import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.LookAndFeel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import smaplayer.FileUtils;
import smaplayer.Mp3;
import smaplayer.PlayerFileFilter;
import smaplayer.SmaPlayer;

/**
 *
 * @author Nick
 */
public class MainFrame extends javax.swing.JFrame {
    
    private PlayerFileFilter openMP3 = new PlayerFileFilter(FileUtils.MP3_FILES_EXP, FileUtils.MP3_FILES_DESC);
    private PlayerFileFilter openPLS = new PlayerFileFilter(FileUtils.PLS_FILES_EXP, FileUtils.PLS_FILES_DESC);
    
    private Playlist playlist;
    private String skin = "javax.swing.plaf.metal.MetalLookAndFeel";
    private int playedSong;

    /**
     * Creates new form MainFrame
     * @param playlist
     */
    public MainFrame(Playlist playlist) {
        initComponents();
        this.playlist = playlist;        
    }
    
    public static void setPlayedSong(String songName){
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jOpenFileDialog = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        pnlStatus = new javax.swing.JPanel();
        slSong = new javax.swing.JSlider();
        lbSongName = new javax.swing.JLabel();
        lbSongTime = new javax.swing.JLabel();
        pnlButtons = new javax.swing.JPanel();
        btnPrevSong = new javax.swing.JButton();
        btnPause = new javax.swing.JButton();
        btnPlay = new javax.swing.JButton();
        btnNextSong = new javax.swing.JButton();
        btnPlayList = new javax.swing.JButton();
        btnVollume = new javax.swing.JToggleButton();
        slVolume = new javax.swing.JSlider();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuOpenFile = new javax.swing.JMenuItem();
        jMenuOpenPlaylist = new javax.swing.JMenuItem();
        jMenuSavePlayList = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuExit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();

        jOpenFileDialog.setAcceptAllFileFilterUsed(false);
        jOpenFileDialog.setMultiSelectionEnabled(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SmaPlayer");
        setIconImage(new ImageIcon("src/smaplayer/images/mainIcon.png").getImage());
        setLocation(new java.awt.Point(500, 500));
        setMinimumSize(new java.awt.Dimension(350, 172));
        setResizable(false);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        pnlStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        slSong.setToolTipText("");
        slSong.setValue(0);

        lbSongName.setText("Название песни");

        lbSongTime.setText("Время песни в формате ММ:СС");

        javax.swing.GroupLayout pnlStatusLayout = new javax.swing.GroupLayout(pnlStatus);
        pnlStatus.setLayout(pnlStatusLayout);
        pnlStatusLayout.setHorizontalGroup(
            pnlStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbSongTime, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSongName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(slSong, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlStatusLayout.setVerticalGroup(
            pnlStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lbSongName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSongTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slSong, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlButtons.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnPrevSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smaplayer/images/prevsong.png"))); // NOI18N
        btnPrevSong.setToolTipText("Предыдущая песня");
        btnPrevSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevSongActionPerformed(evt);
            }
        });

        btnPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smaplayer/images/pause.png"))); // NOI18N
        btnPause.setToolTipText("Пауза");

        btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smaplayer/images/play.png"))); // NOI18N
        btnPlay.setToolTipText("Воспроизвести");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        btnNextSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smaplayer/images/nextsong.png"))); // NOI18N
        btnNextSong.setToolTipText("Следующая песня");
        btnNextSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextSongActionPerformed(evt);
            }
        });

        btnPlayList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smaplayer/images/playlist.png"))); // NOI18N
        btnPlayList.setToolTipText("Плейлист");
        btnPlayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenPlaylist(evt);
            }
        });

        btnVollume.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smaplayer/images/volume_100.png"))); // NOI18N
        btnVollume.setToolTipText("Громкость");

        slVolume.setToolTipText("");
        slVolume.setValue(100);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, btnVollume, org.jdesktop.beansbinding.ELProperty.create("${!selected}"), slVolume, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPrevSong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPause, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNextSong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPlayList, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVollume, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNextSong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrevSong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPause, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPlay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPlayList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVollume, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slVolume, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        jMenuFile.setText("Файл");

        jMenuOpenFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpenFile.setText("Открыть файл");
        jMenuOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenFileActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuOpenFile);

        jMenuOpenPlaylist.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpenPlaylist.setText("Открыть плейлист");
        jMenuOpenPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenPlaylistActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuOpenPlaylist);

        jMenuSavePlayList.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuSavePlayList.setText("Сохранить плейлист");
        jMenuSavePlayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSavePlayListActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuSavePlayList);
        jMenuFile.add(jSeparator1);

        jMenuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuExit.setText("Закрыть программу");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuExit);

        jMenuBar.add(jMenuFile);

        jMenuEdit.setText("Сервис");
        jMenuBar.add(jMenuEdit);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void OpenPlaylist(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenPlaylist
        playlist.setVisible(true);
    }//GEN-LAST:event_OpenPlaylist

    private void jMenuOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenFileActionPerformed
        FileUtils.setFileFilter(jOpenFileDialog, openMP3);        
        int count = jOpenFileDialog.showOpenDialog(this);
        int coin = 0;
        
        Mp3 playlistSongName;
        
        if (count == JFileChooser.APPROVE_OPTION){
            File[] files = jOpenFileDialog.getSelectedFiles();
            
            for (File file: files) {
                Mp3 mp3 = new Mp3(file.getName(), file.getPath());
                
                for (int i = 0; i < playlist.getListModel().size(); i++) {
                    playlistSongName = (Mp3) playlist.getListModel().getElementAt(i);
                    if (mp3.getSongName().equals(playlistSongName.getSongName()))
                        coin++;                    
                }
                
                if(coin == 0)
                    playlist.setListModel(mp3);
                else
                    coin = 0;
            }
        }
        playlist.getList().setSelectedIndex(0);
    }//GEN-LAST:event_jMenuOpenFileActionPerformed

    private void btnNextSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextSongActionPerformed
        int sizeOfList = playlist.getListModel().getSize()-1;
        
        if (playedSong < sizeOfList){
            playedSong++;
            Mp3 mp3 = (Mp3) playlist.getListModel().getElementAt(playedSong);
            lbSongName.setText(mp3.toString());
            playlist.getList().setSelectedIndex(playedSong);
        }
    }//GEN-LAST:event_btnNextSongActionPerformed

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        int selectedSong = playlist.getList().getSelectedIndex();
        if (selectedSong != -1){
            Mp3 mp3 = (Mp3) playlist.getListModel().getElementAt(selectedSong);
            lbSongName.setText(mp3.toString());
            playedSong = selectedSong;
        }        
    }//GEN-LAST:event_btnPlayActionPerformed

    private void btnPrevSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevSongActionPerformed
        if (playedSong > 0){
            playedSong--;
            Mp3 mp3 = (Mp3) playlist.getListModel().getElementAt(playedSong);
            lbSongName.setText(mp3.toString());
            playlist.getList().setSelectedIndex(playedSong);
        }
    }//GEN-LAST:event_btnPrevSongActionPerformed

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        System.out.println("Закрывает программу");
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void jMenuSavePlayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSavePlayListActionPerformed
        FileUtils.setFileFilter(jOpenFileDialog, openPLS);        
        int count = jOpenFileDialog.showSaveDialog(this);
        
        if (count == JFileChooser.APPROVE_OPTION){
            File selectedFile = jOpenFileDialog.getSelectedFile();
            
            if (selectedFile.exists()){
                
                int resultOvveride = JOptionPane.showConfirmDialog(this, "Файл существует", "Перезаписать", JOptionPane.YES_NO_CANCEL_OPTION);
                switch (resultOvveride){
                    case JOptionPane.NO_OPTION:
                        jMenuSavePlayListActionPerformed(evt);
                        return;
                    case JOptionPane.CANCEL_OPTION:
                        jOpenFileDialog.cancelSelection();
                        return;
                }
                jOpenFileDialog.approveSelection();
            }
            String fileExp = FileUtils.getFileExp(selectedFile.getName());
            
            String result = (fileExp != null && fileExp.equals(FileUtils.PLS_FILES_EXP)) ? selectedFile.getPath() : selectedFile.getPath() +"."+ FileUtils.PLS_FILES_EXP;
            FileUtils.serialize(playlist.getListModel(), result);
        }
    }//GEN-LAST:event_jMenuSavePlayListActionPerformed

    private void jMenuOpenPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenPlaylistActionPerformed
        FileUtils.setFileFilter(jOpenFileDialog, openPLS);        
        DefaultListModel reserv;
        
        int count = jOpenFileDialog.showOpenDialog(this);        
        if (count == JFileChooser.APPROVE_OPTION){
            File selectFile = jOpenFileDialog.getSelectedFile();
            reserv = (DefaultListModel) FileUtils.deserialize(selectFile.getPath());
            playlist.setListModel(reserv);
        }
    }//GEN-LAST:event_jMenuOpenPlaylistActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNextSong;
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnPlayList;
    private javax.swing.JButton btnPrevSong;
    private javax.swing.JToggleButton btnVollume;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuOpenFile;
    private javax.swing.JMenuItem jMenuOpenPlaylist;
    private javax.swing.JMenuItem jMenuSavePlayList;
    private javax.swing.JFileChooser jOpenFileDialog;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lbSongName;
    private javax.swing.JLabel lbSongTime;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlStatus;
    private javax.swing.JSlider slSong;
    private javax.swing.JSlider slVolume;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
